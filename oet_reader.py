import streamlit as st
import pdfplumber
import time
from io import BytesIO
from streamlit_autorefresh import st_autorefresh

st.set_page_config(layout="wide")
st.title("üìù OET Reading Practice")

# –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–∂–Ω—É —Å–µ–∫—É–Ω–¥—É (—è–∫—â–æ —Ç–∞–π–º–µ—Ä –ø—Ä–∞—Ü—é—î)
if "timer_running" in st.session_state and st.session_state.timer_running:
    st_autorefresh(interval=1000, key="auto_refresh")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ç–∞–π–º–µ—Ä–∞
if "start_time" not in st.session_state:
    st.session_state.start_time = None
if "seconds_left" not in st.session_state:
    st.session_state.seconds_left = 15 * 60
if "timer_running" not in st.session_state:
    st.session_state.timer_running = False

col1, col2 = st.columns(2)

with col1:
    st.subheader("üìÑ –¢–µ–∫—Å—Ç")
    text_pdf = st.file_uploader("–ó–∞–≤–∞–Ω—Ç–∞–∂ PDF –∑ —Ç–µ–∫—Å—Ç–æ–º", type="pdf", key="text")
    if text_pdf:
        with pdfplumber.open(BytesIO(text_pdf.read())) as pdf:
            text = "\n".join(page.extract_text() for page in pdf.pages if page.extract_text())
        st.text_area("–¢–µ–∫—Å—Ç", value=text, height=500)

with col2:
    st.subheader("‚ùì –ü–∏—Ç–∞–Ω–Ω—è")
    question_pdf = st.file_uploader("–ó–∞–≤–∞–Ω—Ç–∞–∂ PDF –∑ –ø–∏—Ç–∞–Ω–Ω—è–º–∏", type="pdf", key="questions")
    if question_pdf:
        with pdfplumber.open(BytesIO(question_pdf.read())) as pdf:
            questions = "\n".join(page.extract_text() for page in pdf.pages if page.extract_text())
        st.text_area("–ü–∏—Ç–∞–Ω–Ω—è", value=questions, height=500)

# –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç—É —Ç–∞–π–º–µ—Ä–∞
if st.button("‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç 15 —Ö–≤–∏–ª–∏–Ω"):
    st.session_state.start_time = time.time()
    st.session_state.timer_running = True
    st.session_state.seconds_left = 15 * 60

# –í–∏–≤—ñ–¥ —Ç–∞–π–º–µ—Ä–∞
placeholder = st.empty()
if st.session_state.timer_running and st.session_state.start_time:
    elapsed = int(time.time() - st.session_state.start_time)
    remaining = max(0, 15 * 60 - elapsed)
    st.session_state.seconds_left = remaining
    if remaining == 0:
        st.session_state.timer_running = False

mins, secs = divmod(st.session_state.seconds_left, 60)
with placeholder.container():
    st.markdown(f"### ‚è∞ {mins:02}:{secs:02}")
    if st.session_state.seconds_left == 0:
        st.warning("‚õî –ß–∞—Å –≤–∏–π—à–æ–≤!")

